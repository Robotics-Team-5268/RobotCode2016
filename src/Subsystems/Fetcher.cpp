// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Fetcher.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

Fetcher::Fetcher() : Subsystem("Fetcher"){
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    fetcherCANTalon = RobotMap::fetcherSpeedController1;
    fetcherTalon = RobotMap::fetcherSpeedController2;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
void Fetcher::AddSmartDashboardItems()
{
	SmartDashboard::PutNumber("Fetcher CAN Talon", fetcherCANTalon->Get());
	SmartDashboard::PutNumber("Fetcher Talon", fetcherTalon->Get());
}
void Fetcher::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}
// Put methods for controlling this subsystem
// here. Call these from Commands.
void Fetcher::setCANTalonSpeed(double speed){
fetcherCANTalon->Set(speed);
}
void Fetcher::setTalonSpeed(double speed){
fetcherTalon->Set(speed);
}
bool Fetcher::checkIfFinished(bool a)
{
	if((fetcherCANTalon->IsFwdLimitSwitchClosed() && a)
	|| (fetcherCANTalon->IsRevLimitSwitchClosed() && !a))
		return true;
	return false;
}
